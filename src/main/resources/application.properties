server.port=8081
spring.application.name=attendance-system
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
# Keycloak properties
keycloak.realm=attendance_system
keycloak.resource=attendance-system-client
keycloak.auth-server-url=http://localhost:8080
keycloak.ssl-required=external
keycloak.credentials.secret=wOB3fO1H0NeNjkCyN9sTCkdiqtYF5KEJ
keycloak.use-resource-role-mappings=true

# Spring Security OAuth2 properties
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.client-id=attendance-system-client
spring.security.oauth2.client.registration.keycloak.client-secret=wOB3fO1H0NeNjkCyN9sTCkdiqtYF5KEJ
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.auth-server-url}/realms/attendance_system/protocol/openid-connect/token
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/test-realm
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/

# Use provider with issuer-uri
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.auth-server-url}/realms/attendance_system
